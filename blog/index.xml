<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Just murmur</title>
    <link>https://cwweng.github.io/blog/</link>
    <description>Recent content in Posts on Just murmur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Wed, 13 Feb 2019 00:09:00 +0800</lastBuildDate>
    
	<atom:link href="https://cwweng.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>日本中部北陸 11 日 — 第十一天</title>
      <link>https://cwweng.github.io/blog/2019/02/13-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day11/</link>
      <pubDate>Wed, 13 Feb 2019 00:09:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2019/02/13-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day11/</guid>
      <description>&lt;p&gt;隔了三年才寫有個缺點，那就是都忘了，看著照片想不出那是啥東西，就隨便寫寫吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第十天</title>
      <link>https://cwweng.github.io/blog/2017/09/11-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day10/</link>
      <pubDate>Mon, 11 Sep 2017 02:20:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/09/11-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day10/</guid>
      <description>&lt;p&gt;今天的行程只有兩個，磁浮鐵道館和買藥妝。前一個是專門找給小孩的，不然十一天下來他們除了坐一堆交通工具很開心外，其他大概都記不得了。後一個嘛，來日本就是要買藥妝啊，不然要幹嘛！&lt;/p&gt;

&lt;p&gt;接下來兩天由於現金嚴重不足，也沒有開通海外提款，所以每天早餐只能在便利商店解決，甚至連今天的午餐都要在便利商店先買好，苦命！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第九天</title>
      <link>https://cwweng.github.io/blog/2017/09/05-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day9/</link>
      <pubDate>Tue, 05 Sep 2017 22:11:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/09/05-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day9/</guid>
      <description>&lt;p&gt;行程接近尾聲了，今天是最後一天待在高山，把「高山陣屋」和「上三之町古街」逛完就要回到繁華的名古屋囉！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第八天</title>
      <link>https://cwweng.github.io/blog/2017/09/04-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day8/</link>
      <pubDate>Mon, 04 Sep 2017 01:15:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/09/04-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day8/</guid>
      <description>&lt;p&gt;今天要去的是到日本中部必玩的「上高地」，又是一個點玩一整天的重頭戲，感覺這次來玩很多必玩景點。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第七天</title>
      <link>https://cwweng.github.io/blog/2017/08/30-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day7/</link>
      <pubDate>Wed, 30 Aug 2017 00:05:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/30-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day7/</guid>
      <description>&lt;p&gt;今天的行程終於沒有那麼趕了，只有宮川朝市、新穗高纜車和 Gattan Go !! 這三個，算是給前幾天和接下來幾天的累人行程加個緩衝。&lt;/p&gt;

&lt;h3 id=&#34;宮川朝市&#34;&gt;宮川朝市&lt;/h3&gt;

&lt;p&gt;宮川朝市是日本的三大朝市之一，似乎是高山市的必逛地點之一，研究過的行程幾乎都有把這裡排進去，加上為了省錢，訂飯店都沒有含早餐，想說可以順便到這裡找早餐吃。沒想到，這個朝市沒賣什麼可以當早餐的！只有簡單不便宜填不飽肚子的飛驒牛肉包、一樣不便宜的飛驒牛串燒、飛驒牛奶，其他的都比較像小吃，剩下的攤販真的都是賣青菜水果和文創商品，店面都是賣紀念品，失策！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第六天</title>
      <link>https://cwweng.github.io/blog/2017/08/26-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day6/</link>
      <pubDate>Sat, 26 Aug 2017 20:19:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/26-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day6/</guid>
      <description>&lt;p&gt;今天的行程又是重頭戲之一「白川鄉合掌村」，整天差不多就是只有排這個點了，雖然說不是白雪靄靄的冬天，不過夏天綠油油的合掌村也是美得嫑嫑的！&lt;/p&gt;

&lt;h3 id=&#34;停車&#34;&gt;停車&lt;/h3&gt;

&lt;p&gt;雖然入口處就有一個相當大的停車場，不過如果要到山上的展望台，除了搭村裡的公車，大部分的人都是選擇走上去再走下來，但是這對前一天才走了整個金澤的一家人來說還是能免就免。&lt;/p&gt;

&lt;p&gt;皇天不負苦心人，原來有這種困擾的不是只有我一個啊！在背包客棧的&lt;a href=&#34;http://www.backpackers.com.tw/forum/showthread.php?t=1470061&#34;&gt;【交通】 白川鄉城山展望台&lt;/a&gt;這篇文章就有好心人指出前往展望台的停車位置了，雖然車位不多，不過似乎會直接開車上去的人也不多。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第五天</title>
      <link>https://cwweng.github.io/blog/2017/08/16-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day5/</link>
      <pubDate>Wed, 16 Aug 2017 14:44:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/16-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day5/</guid>
      <description>&lt;p&gt;這天的行程是金澤市區一日遊，這天大概是這次出遊最操的一天了，從早上走到晚上，行程滿滿！老大還因為走太多路大腿磨到有點紅紅的，誇張！&lt;/p&gt;

&lt;h3 id=&#34;規劃&#34;&gt;規劃&lt;/h3&gt;

&lt;h4 id=&#34;停車&#34;&gt;停車&lt;/h4&gt;

&lt;p&gt;由於是金澤市區一日遊，加上又是假日，所以開車並不是選項之一，太辛苦了。也因為前一晚不是住在市區，必須先開車到市區停好車，所以得找一個便宜又方便的停車場。&lt;/p&gt;

&lt;p&gt;中間的甘苦就不說了，總之要便宜就是找收費有上限的那種，最後決定的是&lt;a href=&#34;http://www.parkingguide-kanazawa.com/category/parking/101073.html?pid=00002005&#34;&gt;名鉄協商パーキング 金沢ニシパ&lt;/a&gt;，12 小時以內最多 ¥800，這應該是金澤站附近長時間停車最划算的了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第四天</title>
      <link>https://cwweng.github.io/blog/2017/08/13-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day4/</link>
      <pubDate>Sun, 13 Aug 2017 02:19:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/13-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day4/</guid>
      <description>&lt;p&gt;這天的行程應該是這次出遊最簡單的一次了，就是出車去黑部峽谷鐵道一日遊，然後到飯店住宿，簡單搞定！&lt;/p&gt;

&lt;h3 id=&#34;規劃&#34;&gt;規劃&lt;/h3&gt;

&lt;h4 id=&#34;交通工具&#34;&gt;交通工具&lt;/h4&gt;

&lt;p&gt;行程簡單，規劃不簡單啊！主因就是交通工具。要去玩黑部峽谷鐵道有兩種方法，一種是坐富山地方鐵道，另一種就是租車自駕。&lt;/p&gt;

&lt;p&gt;想坐火車的原因很簡單，整天就只有一個點，何必多租車一天結果車都停在停車場呢！而且套票可以坐到「寺田」，只需要加買「寺田」到「宇奈月溫泉」的票就好了。可惜，現實是殘酷的！&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;如果從富山出發，電車到「宇奈月溫泉」不包含走路就要超過一個半小時，花時間。&lt;/li&gt;
&lt;li&gt;前一晚改住「漁津」可以少花很多交通時間，不過前一天走完黑部立山還要再坐到漁津，累！&lt;/li&gt;
&lt;li&gt;這天玩完還要再坐電車回到富山過夜，準備隔天租車，但是遇到假日富山已經沒有沒地方住了。&lt;/li&gt;
&lt;li&gt;行李拉來拉去很麻煩，不然就是要再寄一次。&lt;/li&gt;
&lt;li&gt;最重要的一點，買了一堆電車票根本沒有省到錢，說不定還比租車一天貴啊！&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;結論就是，多租一天車的價錢其實沒很貴，還輕鬆不少，也不用趕火車，自駕萬歲！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第三天</title>
      <link>https://cwweng.github.io/blog/2017/08/12-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day3/</link>
      <pubDate>Sat, 12 Aug 2017 02:42:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/12-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day3/</guid>
      <description>&lt;p&gt;今天的行程就是這次自助旅遊的重頭戲之一：黑部立山橫斷。原本的計畫是在黑部水庫、室堂、彌陀原都走走，不過計劃趕不上變化，室堂行程縮短了，彌陀原直接放棄。&lt;/p&gt;

&lt;h3 id=&#34;規劃&#34;&gt;規劃&lt;/h3&gt;

&lt;p&gt;黑部立山這個點的規畫應該是這次行程最複雜的了，首先要搞懂網站上的車次時間表，有些車次只有特定季節或假日才有開，要是錯過了末班車可就得打地鋪了。然後還要計算一下想特別逛的點要停留多久，免得花一堆時間在等車。&lt;/p&gt;

&lt;p&gt;如果要一天橫斷，還要走一下一些著名景點，所以要善用一整天的時間。雖然說早點起床是很棒，可是帶小孩不想搞得大家太累，就想說找間離黑部水庫最近的地方過夜，可以睡久一點。可惜，信濃大町和大町溫泉鄉住宿的點似乎都是傳統的日式旅館，要共用大浴池，目前還做不到這麼入境隨俗，所以前一晚只好住到貴鬆鬆的黑部第四皇家酒店。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第二天</title>
      <link>https://cwweng.github.io/blog/2017/08/11-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day2/</link>
      <pubDate>Fri, 11 Aug 2017 01:35:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/11-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day2/</guid>
      <description>&lt;p&gt;第二天的主要行程就是松本一日遊，傍晚前信濃大町方向移動，爭取在隔天晚點起床多花點時間在黑部立山。原本想在松本站租腳踏車，但是不確定有沒有兒童椅，所以乾脆用走的了，其實也不遠。&lt;/p&gt;

&lt;h3 id=&#34;前往松本&#34;&gt;前往松本&lt;/h3&gt;

&lt;p&gt;第二天一大早就先趕緊到櫃檯把行李寄到後天在富山住宿的飯店，這樣松本、立山黑部這兩天就不用擔心行李寄放的問題了。&lt;/p&gt;

&lt;p&gt;再回到名古屋站後，到 10 號月台搭乘 8:00 的特急 3 號前往松本。沒有訂到指定席只好坐自由座，幸好大概是非假日早上的關係，還是有位子坐。早餐就在火車上吃前一晚便利商店買的麵包了，簡單搞定。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  第一天</title>
      <link>https://cwweng.github.io/blog/2017/08/10-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day1/</link>
      <pubDate>Thu, 10 Aug 2017 11:04:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/08/10-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-day1/</guid>
      <description> 第一天沒什麼特別的，中午的飛機到名古屋差不多就準備吃晚餐了。
搭飛機 台灣飛中部國際機場若不考慮廉航，那最便宜的應該就是國泰航空了，缺點就是不能累計里程，而且要兩天前才能線上畫位。不過他均價比其他航空公司便宜數千元，而且是中午去下午回，真的很超值。
因為很早訂所以信用卡搭配的機場接送沒法用，加上不想亭機場外圍停車場留鑰匙，所以決定停到網路上大家推薦的機場貨運站停車場，一天只要 $100，而且先付費後就可以停到一航廈的停車場（2017/3 後改由嘟嘟房經營，此法失效）。
 還是同一個機場，不同的是小孩都大了，兩個人都趴在窗戶上認真的看著等會兒要搭的飛機。
兒童餐，看起來不錯
大人的，不難吃
到達中部國際機場囉！機場看起來不大，天氣陰陰的。
中部國際機場路線很簡單，不太可能迷路，出關後走過一個長廊就看得到要搭的名鉄線了。
票價不便宜啊！機場到名古屋，大人要 ¥870，小孩要 ¥440。
名古屋站 很大！真的很大！從名鉄名古屋站要走到名古屋站一樓就花了好多時間。因為帶著行李和小孩想走有電梯或手扶梯的路線，雖然事先花了時間研究了站內地圖，也參考了小氣少年的部落格，還是稍微的迷路了 :(
到名古屋站最重要的目的就是去 JR 東海購買「立山黑部套票」。雖然服務人員也會說英語，不過最好還是把要買的票和要坐的車次寫出來，這樣速度快很多。套票說名古屋到松本可以坐指定席，可是因為隔天就要出發所以已經沒位子了，不過高山回名古屋的位子還是有的。
到 JR 東海的遊客中心購票，站內地圖和網路上的文章都有說明，不難找。
晚餐 &amp;ndash; 一蘭拉麵 晚餐是飯店 Check-in 後才出來吃的，之前就有看到飯店附近有家「一蘭拉麵」，剛好大家迷路到都累了，有得吃就好。
即使是飄著雨的非假日，排隊的人還是很多，幸好消化的速度也不慢，等不到半小時就吃到了。第一次看到有餐廳每個位子都有燈號顯示狀態，我們一家四口可以占用左下角那個小包廂。
包廂的空間還可以，還有衣架可以掛外套。桌子也很神奇，可以延伸出來變成四人座。
拉麵就&amp;hellip;拉麵的樣子囉！全家人都不是拉麵控，吃不出等級來，反正很好吃就對了。
小吃 &amp;ndash; 手羽先 聽說名古屋的手羽先(炸雞翅)是必吃，趁著今晚沒排啥行程趕快吃一吃，免得之後沒力氣找。之前查了老半天都是說「風來坊」和「世界の山ちゃん」，看了老半天也不知道要選哪個，也沒有離飯店近一點的。碰巧在不知道哪個部落格看到「伍味酉」這個歷史悠久的老店，本店還剛好在飯店附近，那就它啦！
其實是個居酒屋，不過我們只是要外帶手羽先。
店內一景，一種說不出的日本味。
一盒似乎只裝五支，超過就是另外一盒，因為盒子也要錢 :(
吃完是覺得比一般的炸雞翅好啦，不過有點像在吃醬汁，拿起來不趕快吃還會滴幾滴下來，搞得全家手都又油又黏！嚐嚐鮮就好，不要像我們一樣一次買九支，有點浪費錢。
飯店 &amp;ndash; Nagoya Garland Hotel 今天住的是靠近榮町的 Nagoya Garland Hotel，雖然隔天就要再回名古屋站搭 JR，不過勝在便宜，只好多走點路了。
因為已經到 1F 買套票了，所以要去搭東山線就糊里糊塗跟著指標走到了車站外面。發現從名古屋站要搭東山線到「榮」也是個挑戰，因為找不到電梯，最後發現電梯要稍微繞一下。可以參考這篇文章，差不多就是出了車站大門後順著指標跟著人群走，之後會發現電梯的指標會越走越遠離人潮&amp;hellip;沒錯！就是這樣！很隱密！
到達「榮」後要再到飯店又是個挑戰，網路上都說從「丸榮百貨」出來轉個彎就到了，不過因為手扶梯上去進到「丸榮百貨」後轉錯彎，只好走到百貨外面繞圈圈，多花了好多時間 :(
飯店外觀不大，不過服務人員挺親切的。
今天住的是小房間，反正第一天不用整理戰利品，隔天就要出發，有得睡就好。
今日開銷 今天總共花了，買套票佔了大宗。
 第一航廈停車： $1100 車票(機場至名古屋)：¥870 * 2 + ¥440 = ¥2180 黑部立山套票：¥46580 車票(名古屋至榮)：¥200 * 2 + ¥100 = ¥500 一蘭拉麵：¥790 + ¥1080 = ¥1870 手羽先：¥1566 早餐(便利商店)：¥588 飯店(Nagoya Garland Hotel)：¥7800  有用連結  名鐵名古屋站內圖 名古屋站站內圖：1F、B1  </description>
    </item>
    
    <item>
      <title>Intellij IDEA 出現 Unindexed remote maven repositories found 的錯誤訊息</title>
      <link>https://cwweng.github.io/blog/2017/07/24-intellijidea-unindexed-remote-maven-repositories-found/</link>
      <pubDate>Mon, 24 Jul 2017 15:30:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/07/24-intellijidea-unindexed-remote-maven-repositories-found/</guid>
      <description>&lt;p&gt;最近心血來潮想改用 Intellij IDEA，在匯入 Gradle 專案時出現了如下的錯誤訊息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Unindexed remote maven repositories found. Disable...
        The following repositories used in your gradle projects were not indexed yet: 
        http://repo1.maven.org/maven2
        If you want to use dependency completion for these repositories artifacts,
        Open Repositories List, select required repositories and press &amp;quot;Update&amp;quot; button (show balloon)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes 透過自建的 Docker Registry 取得 Image</title>
      <link>https://cwweng.github.io/blog/2017/06/20-kubernetes-pull-images-from-private-docker-registry-servier/</link>
      <pubDate>Tue, 20 Jun 2017 16:05:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/06/20-kubernetes-pull-images-from-private-docker-registry-servier/</guid>
      <description>&lt;p&gt;因為 image 放到 Docker Hub 太危險也不符公司資安規定，所以在用 Kubernetes 前，最好還是有個自己的 Docker Registry，不然還要自己手動把每個 image 放到每個 node，太麻煩！&lt;/p&gt;

&lt;h3 id=&#34;自建-docker-registry&#34;&gt;自建 Docker Registry&lt;/h3&gt;

&lt;p&gt;網路上資料很多，不過其實也沒有很麻煩，官網的 &lt;a href=&#34;https://docs.docker.com/registry/deploying/&#34;&gt;Deploying a registry server&lt;/a&gt; 最詳細，只是我覺得順序或排版看得不太順。以下是參考其他文章後建置的順序：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>建立預先設定好 Exchange/Queue/User 的 RabbitMQ Docker Image</title>
      <link>https://cwweng.github.io/blog/2017/06/20-rabbitmq-on-docker/</link>
      <pubDate>Tue, 20 Jun 2017 09:30:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/06/20-rabbitmq-on-docker/</guid>
      <description>&lt;p&gt;如果都已經用 Docker 了，結果 image 給別人以後還要按手冊建立 queue 和 exchange，這樣可能有點掉漆，幸好網路上資料很多。&lt;/p&gt;

&lt;p&gt;首先，必須先進去 RabbitMQ Management 的網頁，把原本的設定匯出，然後再更名為&lt;code&gt;definitions.json&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt; 只要把 rabbitmq.config 和 definitions.json 加進去就行啦！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; rabbitmq:3-management&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; rabbitmq.config /etc/rabbitmq/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; definitions.json /etc/rabbitmq/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>在 VirtualBox 的 CentOS 7 VM 上建置 Kubernetes Cluster</title>
      <link>https://cwweng.github.io/blog/2017/05/24-kubernetes-on-centos-7-guest-in-virtualbox/</link>
      <pubDate>Wed, 24 May 2017 16:21:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/05/24-kubernetes-on-centos-7-guest-in-virtualbox/</guid>
      <description>&lt;p&gt;搞了兩三天，終於成功了。&lt;/p&gt;

&lt;p&gt;主要是參考 Kubernetes 官方的 &lt;a href=&#34;https://kubernetes.io/docs/getting-started-guides/kubeadm/&#34;&gt;Installing Kubernetes on Linux with kubeadm&lt;/a&gt;，雖然是 Beta，不過應該是未來的趨勢，衝了。不得不說，如果是用 VM 又躲在防火牆後面又雙網卡，那只按照官方文件做真的會搞老半天。&lt;/p&gt;

&lt;h2 id=&#34;環境說明&#34;&gt;環境說明&lt;/h2&gt;

&lt;p&gt;公司很龜毛，有防火牆，所以要連到 internet 抓東西就要透過 proxy。公司也很機車，IP 有管制，沒申請的 IP 連 gateway 都出不去。公司也很省，配的設備不怎麼樣，所以一台 PC 裝多個 VM 互連會哭出來。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本中部北陸 11 日 —  行程規劃</title>
      <link>https://cwweng.github.io/blog/2017/05/09-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-%E8%A1%8C%E7%A8%8B%E8%A6%8F%E5%8A%83/</link>
      <pubDate>Tue, 09 May 2017 21:56:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2017/05/09-%E6%97%A5%E6%9C%AC%E4%B8%AD%E9%83%A8%E5%8C%97%E9%99%B8-%E8%A1%8C%E7%A8%8B%E8%A6%8F%E5%8A%83/</guid>
      <description>&lt;h3 id=&#34;日本我又來啦&#34;&gt;日本我又來啦！&lt;/h3&gt;

&lt;p&gt;我們全家又去日本自由行啦！自從上次利用華航精緻旅遊去沖繩六天五夜後，就覺得日本真是便宜又方便的好地方。機票便宜、住宿便宜、吃的習慣、治安良好，真是帶著兩個小孩親子遊的好地方！&lt;/p&gt;

&lt;p&gt;這次挑戰的是中部北陸十一天，比上次用華航精緻旅遊又更進化了！本來是想去北海道看薰衣草的，但是同事說機票貴住宿也貴，索性隨便找了個相對不那麼熱門的點。雖然老婆說這是啥鳥地方，不過我就是喜歡去身旁的人沒去過的點，規劃的人最大！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 下的 Eclipse 4 的 toolbar 變超大</title>
      <link>https://cwweng.github.io/blog/2016/06/01-eclipse-large-icon-size/</link>
      <pubDate>Wed, 01 Jun 2016 11:15:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2016/06/01-eclipse-large-icon-size/</guid>
      <description>&lt;p&gt;因為要開發 Android 程式裝了 Eclipse 4.5，啟動後發現 toolbar 的 icon 浪費很多空間。參考 &lt;a href=&#34;https://github.com/jeeeyul/eclipse-themes/wiki/Linux-Huge-Toolbar-Problem&#34;&gt;Linux Huge Toolbar Problem&lt;/a&gt; 發現是因為 Eclipse 4 預設用 GTK3。但是它提供的 GTK3 解法不能用，因為都找不到 &lt;code&gt;gtk-widgets.css&lt;/code&gt; 這個檔。&lt;/p&gt;

&lt;p&gt;最後是參考 &lt;a href=&#34;https://www.eclipse.org/forums/index.php/t/1071268/&#34;&gt;[solved] Eclipse (Linux) force GTK2&lt;/a&gt;，修改 &lt;code&gt;eclipse.ini&lt;/code&gt;，加上下面兩行後雖然醜了點但變得比較正常了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;--launcher.GTK_version
&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>task XXX blocked for more than 120 seconds</title>
      <link>https://cwweng.github.io/blog/2016/04/13-blocked-for-more-than-120-seconds/</link>
      <pubDate>Wed, 13 Apr 2016 15:58:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2016/04/13-blocked-for-more-than-120-seconds/</guid>
      <description>&lt;p&gt;公司 VM 的 IO 很慢，最近出現 &lt;code&gt;task XXX blocked for more than 120 seconds&lt;/code&gt;，然後就 Kernel Panic 整個不動了。&lt;/p&gt;

&lt;p&gt;參考&lt;a href=&#34;http://www.blackmoreops.com/2014/09/22/linux-kernel-panic-issue-fix-hung_task_timeout_secs-blocked-120-seconds-problem/&#34;&gt;網路上的文章&lt;/a&gt;，原因是 Linux 要把 file system cache 的資料寫回硬碟時如果 IO 太慢沒辦法在 120 秒內寫完，後續的資料又一直進來，就卡住了。&lt;/p&gt;

&lt;p&gt;解決辦法就是降低 cache 的大小，增加寫入的頻率。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vm.dirty_background_ratio = 2&lt;/code&gt; 降低 cache，當超過這個百分比時就開始背景寫回硬碟。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vm.dirty_ratio = 5&lt;/code&gt; 當超過這個百分比時就強制寫回硬碟。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>修正 fancyBox 點擊圖片後會跳到網頁最上方的問題</title>
      <link>https://cwweng.github.io/blog/2015/12/07-fancybox-cause-page-to-jump-to-top/</link>
      <pubDate>Mon, 07 Dec 2015 02:33:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/07-fancybox-cause-page-to-jump-to-top/</guid>
      <description>&lt;p&gt;處理好 fancyBox 和 Google Photos 的問題後，又跑出了另一個問題：點了圖以後會直接跳到文章的最開頭！一樣也是 Google 後找到&lt;a href=&#34;http://stackoverflow.com/questions/13547007/fancybox2-fancybox-causes-page-to-to-jump-to-the-top&#34;&gt;解法&lt;/a&gt;，參考其中一個修改 css 的方法就搞定了！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jquery.fancybox.css&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;fancybox-lock&lt;/span&gt; {
    &lt;span style=&#34;color:#75715e&#34;&gt;/* overflow: hidden !important; */&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;/* comment out this one */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>fancyBox 和 Google Photos 不太合作 (fancyBox doesn&#39;t work with Google Photos)</title>
      <link>https://cwweng.github.io/blog/2015/12/07-fancybox-with-google-photos/</link>
      <pubDate>Mon, 07 Dec 2015 01:21:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/07-fancybox-with-google-photos/</guid>
      <description>&lt;p&gt;為新 Blog 放上了 &lt;a href=&#34;http://fancyapps.com/fancybox/&#34;&gt;fancyBox&lt;/a&gt; 後發現不支援 Google Photos 圖檔的網址，&lt;a href=&#34;https://github.com/LouisBarranqueiro/tranquilpeak-hexo-theme/issues/51&#34;&gt;查了一下&lt;/a&gt;發現原來 fancyBox 會去判斷副檔名，剛好 Google Photos 提供的網址都沒有副檔名。根據該文章的說明，把 Google Photos 提供的網址最後加上 &lt;strong&gt;#.jpg&lt;/strong&gt; 讓它看起來有副檔名就行了。&lt;/p&gt;

&lt;p&gt;After adding support for &lt;a href=&#34;http://fancyapps.com/fancybox/&#34;&gt;fancyBox&lt;/a&gt;, I found that it doesn&amp;rsquo;t work with Google Photos. According to &lt;a href=&#34;https://github.com/LouisBarranqueiro/tranquilpeak-hexo-theme/issues/51&#34;&gt;this article&lt;/a&gt;, fancyBox requires extension at the end of the URL, and URL provided by Google Photos has none. Just Adding &lt;strong&gt;#.jpg&lt;/strong&gt; at the end of the URL as the article suggested and everything works !&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2015-11-21 貓空茶香環狀步道半日遊</title>
      <link>https://cwweng.github.io/blog/2015/12/05-%E8%B2%93%E7%A9%BA%E8%8C%B6%E9%A6%99%E7%92%B0%E7%8B%80%E6%AD%A5%E9%81%93%E5%8D%8A%E6%97%A5%E9%81%8A/</link>
      <pubDate>Sat, 05 Dec 2015 14:20:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/05-%E8%B2%93%E7%A9%BA%E8%8C%B6%E9%A6%99%E7%92%B0%E7%8B%80%E6%AD%A5%E9%81%93%E5%8D%8A%E6%97%A5%E9%81%8A/</guid>
      <description>&lt;p&gt;又到了周末步道遊的時間了，因為之前在&lt;a href=&#34;http://tw.hiking.biji.co/&#34;&gt;健行筆記&lt;/a&gt;看到的&lt;a href=&#34;http://tw.hiking.biji.co/index.php?q=news&amp;amp;act=info&amp;amp;id=4167&amp;amp;subtitle=%08%E3%80%90%E6%96%B0%E8%81%9E%E3%80%91%E8%B2%93%E7%A9%BA%E6%96%B0%E6%AD%A5%E9%81%93+%E8%8C%B6%E9%A6%99%E7%92%B0%E7%8B%80%E6%AD%A5%E9%81%93&#34;&gt;新聞&lt;/a&gt;，所以這次就是它啦！&lt;/p&gt;

&lt;p&gt;先來張導覽圖，圖是連到上面說的那則新聞裡的導覽圖。
&lt;img src=&#34;http://tw.hiking.biji.co/static/upload/5552cd7f65289.jpg&#34; style=&#34;width: 470px; heigh: 600px&#34; alt=&#34;茶香環狀步道導覽圖&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Duplicated JSON Properties After Serialize with Jackson</title>
      <link>https://cwweng.github.io/blog/2015/12/04-duplicated-json-property-with-jackson-english/</link>
      <pubDate>Fri, 04 Dec 2015 15:36:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/04-duplicated-json-property-with-jackson-english/</guid>
      <description>&lt;p&gt;Following problem found in the previous post, certain property got duplicated in the JSON after serialized polymorphic objects with Jackson.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&#34;http://stackoverflow.com/questions/18237222/duplicate-json-field-with-jackson&#34;&gt;this article&lt;/a&gt;, Jackson will output &lt;code&gt;action&lt;/code&gt; property based on the value of &lt;code&gt;@JsonSubTypes.Type&lt;/code&gt;, and then serialize the object. Since &lt;code&gt;action&lt;/code&gt; property is used for polymorphic object deserialization and as an actual member of the class, &lt;code&gt;action&lt;/code&gt; get duplicated.&lt;/p&gt;

&lt;p&gt;The solution is simple and can be found in the same artitle. Just change &lt;code&gt;JsonTypeInfo.As.PROPERTY&lt;/code&gt; in &lt;code&gt;@JsonTypeInfo&lt;/code&gt; to &lt;code&gt;JsonTypeInfo.As.EXISTING_PROPERTY&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jackson 序列化後的 JSON 出現重複的屬性</title>
      <link>https://cwweng.github.io/blog/2015/12/04-duplicated-json-property-with-jackson/</link>
      <pubDate>Fri, 04 Dec 2015 15:26:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/04-duplicated-json-property-with-jackson/</guid>
      <description>&lt;p&gt;接續之前的文章，發現 Polymorphic 物件序列化後，用來判斷物件類別的屬性被重複輸出了兩次。&lt;/p&gt;

&lt;p&gt;根據&lt;a href=&#34;http://stackoverflow.com/questions/18237222/duplicate-json-field-with-jackson&#34;&gt;這篇文章&lt;/a&gt;的說法，Jackson 在續列化時會根據 &lt;code&gt;@JsonSubTypes.Type&lt;/code&gt; 的值先輸出 &lt;code&gt;action&lt;/code&gt; 屬性，接著才把物件內容序列化。碰巧該物件也有一個 &lt;code&gt;action&lt;/code&gt; 屬性，所以被輸出了兩次。會發生這樣的問題是因為 &lt;code&gt;action&lt;/code&gt; 被同時用來判斷物件類別以及其他用途。&lt;/p&gt;

&lt;p&gt;要解決很簡單，同一篇文章就有答案了。把 &lt;code&gt;@JsonTypeInfo&lt;/code&gt; 裡的 &lt;code&gt;JsonTypeInfo.As.PROPERTY&lt;/code&gt; 改成 &lt;code&gt;JsonTypeInfo.As.EXISTING_PROPERTY&lt;/code&gt; 即可。如下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deserialize JSON Into Polymorphic Types With Jackson</title>
      <link>https://cwweng.github.io/blog/2015/12/04-jackson-deserialize-into-polymorphic-types-english/</link>
      <pubDate>Fri, 04 Dec 2015 14:57:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/04-jackson-deserialize-into-polymorphic-types-english/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;Problem&lt;/h3&gt;

&lt;p&gt;Assume you have two types of JSON documents, and the following actions depend on the value of specific attribute.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;login&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sendMessage&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user Message&amp;#34;&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The simplest way is to deserialized them into Map, but that would be very not object-oriented. We need to find a way to automatically deserialize them into right type of objects.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 Jackson 將 JSON 反序列化成 Polymorphic 物件</title>
      <link>https://cwweng.github.io/blog/2015/12/04-jackson-deserialize-into-polymorphic-types/</link>
      <pubDate>Fri, 04 Dec 2015 14:21:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/04-jackson-deserialize-into-polymorphic-types/</guid>
      <description>&lt;h3 id=&#34;問題&#34;&gt;問題&lt;/h3&gt;

&lt;p&gt;假設有兩種下列的 JSON 文件，依特定屬性的值決定該文件的作用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;login&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sendMessage&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user Message&amp;#34;&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;假如兩種 JSON 文件都有可能收到，最簡單的方法就是都轉成 Map，但是這樣就很不物件化，這時候就需要一種方法可以自動判斷並反序列化成對應的物件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Handshake failed due to invalid Upgrade header: null</title>
      <link>https://cwweng.github.io/blog/2015/12/03-spring-websocket-handshake-failed/</link>
      <pubDate>Thu, 03 Dec 2015 15:24:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/12/03-spring-websocket-handshake-failed/</guid>
      <description>&lt;p&gt;昨天用 Chrome 的 &lt;a href=&#34;https://chrome.google.com/webstore/detail/simple-websocket-client/pfdhoblngboilpfeibdedpjgfnlcodoo&#34;&gt;Simple WebSocket Client&lt;/a&gt; 測試用 Spring Framework 開發的 WebSocket 程式時，發現一直吐出 &lt;code&gt;org.springframework.web.socket.server.support.DefaultHandshakeHandler.handleInvalidUpgradeHeader Handshake failed due to invalid Upgrade header: null&lt;/code&gt; 的錯誤訊息。但是用 Wireshark 抓封包看到送出的 Request 其實是有 &lt;code&gt;Upgrade: websocket&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重新出發</title>
      <link>https://cwweng.github.io/blog/2015/11/30-new-start/</link>
      <pubDate>Mon, 30 Nov 2015 16:32:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2015/11/30-new-start/</guid>
      <description>公司把 Tumblr 擋掉了，反正那邊也太久沒用了，上次用發覺很慢，就乾脆換個地方重新出發吧。
這次改用 JBake 加上 Github Page，所有東西都可以版本控制，就玩玩看吧。</description>
    </item>
    
    <item>
      <title>Linux 掛載 Windows 網芳</title>
      <link>https://cwweng.github.io/blog/2013/09/14-linux-mount-windows-share/</link>
      <pubDate>Sat, 14 Sep 2013 14:41:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2013/09/14-linux-mount-windows-share/</guid>
      <description>&lt;h4 id=&#34;安裝&#34;&gt;安裝&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;apt-get install smbclient
apt-get install cifs-utils&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;瀏覽&#34;&gt;瀏覽&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;smbclient -L //IP/Share -U domain/username -D subdirectory&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;掛載&#34;&gt;掛載&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mount -t cifs -o user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;username&amp;gt;,domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;domain&amp;gt;,password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;password&amp;gt; //IP/Share/subdirectory /mount_point&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>「回到明朝當王爺」觀後感</title>
      <link>https://cwweng.github.io/blog/2011/08/03-%E5%9B%9E%E5%88%B0%E6%98%8E%E6%9C%9D%E7%95%B6%E7%8E%8B%E7%88%BA/</link>
      <pubDate>Wed, 03 Aug 2011 11:16:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/08/03-%E5%9B%9E%E5%88%B0%E6%98%8E%E6%9C%9D%E7%95%B6%E7%8E%8B%E7%88%BA/</guid>
      <description>&lt;p&gt;打個分數：四顆星&lt;/p&gt;

&lt;p&gt;拜&lt;a href=&#34;http://www.haodoo.net/&#34;&gt;網路&lt;/a&gt;和 Kindle 的幫助，在幾乎睜開眼有時間的情況下就是拿來看&lt;a href=&#34;http://www.haodoo.net/?M=Share&amp;amp;P=0937&#34;&gt;回到明朝當王爺&lt;/a&gt;。就算是這樣也花了半個月以上的時間，真的是很長的一本小說。&lt;/p&gt;

&lt;p&gt;簡單來說，就是男主角陰錯陽差的回到了明朝附身在一個邊疆的秀才身上，又很強運的在兩三年內一路狂升，從邊疆的驛丞、太子侍讀、神機營參將、內廠廠督、威武侯、威武公直至威武王。又運用了一些現代人的知識和身旁高手的協助，鬥倒掉了劉謹、開海禁、滅倭寇海盜、驅夷人收復滿刺加、平四川蠻族叛亂、平白巾賊響馬盜內亂，連蒙古韃靼也被他解決了，最後還封疆蒙古準備北上吃掉西伯利亞。過程中還一路取了嬌妻美妾，這還不夠強運嗎！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2011-07 日月潭兩天一夜</title>
      <link>https://cwweng.github.io/blog/2011/07/07-%E6%97%A5%E6%9C%88%E6%BD%AD%E5%85%A9%E5%A4%A9%E4%B8%80%E5%A4%9C/</link>
      <pubDate>Thu, 07 Jul 2011 23:06:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/07/07-%E6%97%A5%E6%9C%88%E6%BD%AD%E5%85%A9%E5%A4%A9%E4%B8%80%E5%A4%9C/</guid>
      <description>&lt;p&gt;六月初經由&lt;a href=&#34;http://uhooamber.com&#34;&gt;李小淮&lt;/a&gt;得知了南投縣魚池鄉『日月潭頭社休閒農業區』自行車逍遙遊的活動，再加上&lt;a href=&#34;http://uhooamber.com&#34;&gt;好心人&lt;/a&gt;贊助的日月潭湖景房，所以 &lt;sup&gt;7&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; 就往南投出發啦！&lt;/p&gt;

&lt;p&gt;第一站是埔里酒廠，天氣很熱。首先就買了好像大家一定會的買紹興香腸，一支才 $25，不貴也不錯吃啦！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/fB4ilvQy-aD9qXYleiaakyK6tBsQSnAk9xMTHTuHd2DYNIn3t8BByYlEzp1Zyy5AzkjiMc2XiFBq7e5SaA=w640&#34; alt=&#34;埔里酒廠紹興香腸&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WSDLToJava Error: Thrown by JAXB: Two declarations cause a collision in the ObjectFactory class</title>
      <link>https://cwweng.github.io/blog/2011/06/28-two-declarations-cause-a-collision-in-the-objectfactory-class/</link>
      <pubDate>Tue, 28 Jun 2011 11:46:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/06/28-two-declarations-cause-a-collision-in-the-objectfactory-class/</guid>
      <description>&lt;p&gt;&lt;em&gt;Update&lt;/em&gt; : I migrate from tumblr to Github Page, slightly modify and re-post this article.&lt;/p&gt;

&lt;p&gt;This is the English version of my &lt;a href=&#34;http://cwweng.github.io/blog/2011/06/03-Two-declarations-cause-a-collision-in-the-ObjectFactory-class.html&#34;&gt;another post&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;While I was testing PlateSpin Recon Web Service API with Apach CXF, the WSDL2Java gave me the following exception : &lt;span style=&#34;color: red&#34;&gt;WSDLToJava Error: Thrown by JAXB: Two declarations cause a collision in the ObjectFactory class. at line 263 column 90 of schema file:/home/cwweng/workspace/recon/PerformanceDataCollectionWS.wsdl&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Turns out it was the following section cause the error&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:complexType&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MonitorFilter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:sequence&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:element&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;minOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_sumInstances&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s:boolean&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- irrelevant --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:element&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;minOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SumInstances&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s:boolean&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- irrelevant --&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/s:sequence&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/s:complexType&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The root cause is that &lt;strong&gt;_sumInstances and SumInstances produce the same property&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Amazon Kindle 3 入手</title>
      <link>https://cwweng.github.io/blog/2011/06/24-kindle-3/</link>
      <pubDate>Fri, 24 Jun 2011 13:14:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/06/24-kindle-3/</guid>
      <description>&lt;p&gt;抓了很多電子書，但是用電腦看的缺點就是眼睛會越看越乾，久了就累了想睡覺。另外就是開會或是出差閒閒沒事時沒辦法看，要用手機看電子書不如拿來玩遊戲。所以買一台電子書閱讀器就是最好的選擇啦！雖然原因那麼多，但最主要的是最近發獎金有一筆小錢啦！&lt;/p&gt;

&lt;p&gt;iPad 紅歸紅，一樣有看久會累的問題，而且買了 iPad 應該大部份時間都不會是看電子書吧，而且&amp;hellip;它很貴。總之，買了台 Kindle 3 Wifi-only，正值台幣值錢，加上稅金運費也只要台幣 4800 就搞定了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>香港四天三夜自由行 ─ 第四天</title>
      <link>https://cwweng.github.io/blog/2011/06/17-hong-kong-day4/</link>
      <pubDate>Fri, 17 Jun 2011 17:04:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/06/17-hong-kong-day4/</guid>
      <description>&lt;p&gt;第四天了，拖了兩年多終於要寫完啦！&lt;/p&gt;

&lt;p&gt;這天一大早就辦退房了，但是退房後可以寄放行李，這樣就能輕輕鬆鬆出去玩了，有這種服務真棒！&lt;/p&gt;

&lt;p&gt;早餐原本好像是要吃「澳洲牛奶公司」，不過變成了「美心快餐」，也是很好吃，尤其是蘿蔔糕，讚！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/z-3k512Gbegn85UcP9UFSShVWwyyG-eqCu97iNEwJW45KgvH8x6k7NkvdrVOLIR2UJhoKgd1u_slvFm3VA=w640&#34; alt=&#34;美心快餐&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>香港四天三夜自由行 ─ 第三天</title>
      <link>https://cwweng.github.io/blog/2011/06/14-hong-kong-day3/</link>
      <pubDate>Tue, 14 Jun 2011 15:58:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/06/14-hong-kong-day3/</guid>
      <description>&lt;p&gt;隔兩年了，要動&lt;strike&gt;筆&lt;/strike&gt;手真難&lt;/p&gt;

&lt;p&gt;今天計畫很簡單，可是不太輕鬆，加上前一晚太累，所以一大早就拖延了。早餐吃的是「潮樓」，照慣例有著香港不怎麼樣的服務態度，但又很美味的食物，真的是又愛又恨啊！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WSDL2Java 出現 Two declarations cause a collision in the ObjectFactory class 的錯誤</title>
      <link>https://cwweng.github.io/blog/2011/06/03-two-declarations-cause-a-collision-in-the-objectfactory-class/</link>
      <pubDate>Fri, 03 Jun 2011 11:15:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2011/06/03-two-declarations-cause-a-collision-in-the-objectfactory-class/</guid>
      <description>&lt;h2 id=&#34;問題&#34;&gt;問題&lt;/h2&gt;

&lt;p&gt;測試 PlateSpin Recon Web Service API，要用 Apache CXF 內的 WSDLToJava 時出現的問題&lt;/p&gt;

&lt;p&gt;直接執行 WSDLToJava PerformanceDataCollectionWS.wsdl 出現 &lt;span style=&#34;color: red&#34;&gt;WSDLToJava Error: Thrown by JAXB: Two declarations cause a collision in the ObjectFactory class. at line 263 column 90 of schema file:/home/cwweng/workspace/recon/PerformanceDataCollectionWS.wsdl&lt;/span&gt; 的錯誤。結果是因為 PerformanceDataCollectionWS.wsdl 下面的這一段出問題&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:complexType&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MonitorFilter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:sequence&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:element&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;minOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_sumInstances&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s:boolean&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 省略 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;s:element&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;minOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxOccurs=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SumInstances&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s:boolean&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 省略 --&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/s:sequence&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/s:complexType&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因為 &lt;strong&gt;_sumInstances 和 SumInstances 會產生相同的 property&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>香港四天三夜自由行 ─ 第二天</title>
      <link>https://cwweng.github.io/blog/2009/11/07-hong-kong-day2/</link>
      <pubDate>Sat, 07 Nov 2009 22:15:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2009/11/07-hong-kong-day2/</guid>
      <description>&lt;p&gt;這次更扯啦！距離前一篇已經超過五個月囉！寫遊記實在不是我的強項。&lt;/p&gt;

&lt;p&gt;第二天大概八點起床吧，雖然說是自由行，不過如果睡太晚就虧大囉。今天的行程主要是去海洋公園、太平山夜景、還有蘭桂芳，不過重點還是香港美食啦！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>香港四天三夜自由行 ─ 第一天</title>
      <link>https://cwweng.github.io/blog/2009/05/28-hong-kong-day1/</link>
      <pubDate>Thu, 28 May 2009 15:00:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2009/05/28-hong-kong-day1/</guid>
      <description>&lt;p&gt;距離前一篇已經過了三個月了，人懶起來真的是很恐佈的！&lt;/p&gt;

&lt;p&gt;行程的開頭當然是去機場啦，幸好刷國泰的卡可以免費停外圍的五福停車場，不然交通真的是很麻煩的一件事，雖然如此，路癡我還是迷了路幸好沒有延誤。登機的地方是第二航廈，不過就算是第二航廈還是很不怎麼樣，輸國外很多啊！&lt;/p&gt;

&lt;p&gt;行程的第一站就誤點了，因為飛機重新降落，果然計劃趕不上變化啊！一出關就很明顯就看到中旅社的櫃台了，把「單程纜車+凌霄閣」套票和海洋公園的票買好，再買八達通，港幣去掉快大半了。接著就去 Hotel Link 登記等著上巴士然後就到了要睡四天的金御假日了。東西放一放就往第一站「半島酒店下午茶」出發啦！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>香港四天三夜自由行 ─ 行前規劃</title>
      <link>https://cwweng.github.io/blog/2009/02/08-hong-kong-plan/</link>
      <pubDate>Sun, 08 Feb 2009 20:08:00 +0800</pubDate>
      
      <guid>https://cwweng.github.io/blog/2009/02/08-hong-kong-plan/</guid>
      <description>&lt;p&gt;因為老婆放寒假，本來是想趁過年去紐西蘭玩的，查了一下以後發現&amp;hellip;&amp;hellip;貴死人，加上現在經濟不景氣我們還是低調點的好，所以就變成香港啦。其實我是個懶人，想到要自己規劃行程又更懶了，所以拖到過年前一週才開始研究，一經老婆提醒才想到過年銀行都沒開，緊急草率算了一下趕快去換的結果就是現金徹底的不夠，差點在香港沒錢吃飯。&lt;/p&gt;

&lt;p&gt;第一步當然就是確定出去玩的日期、酒店和飛機了。很不巧的有同事跟我撞期要去日本，，只好選擇 &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; ~ &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;5&lt;/sub&gt; 這四天，週末的假一天都沒有派上用場 :-( 不過這樣也沒啥不好，至少每個點都不用人擠人浪費時間。機加酒最後是選擇了&lt;a href=&#34;http://www.kktravel.com.tw&#34;&gt;自遊網&lt;/a&gt;的金御假日酒店和長榮航空早去晚回（含機場酒店接送及簽證），因為金御假日就在地鐵站出口旁，而且也比喜來登便宜多了。&lt;/p&gt;

&lt;p&gt;規劃行程是最麻煩的了，要參考一堆別人的行程，研究自己想去的點、想吃的店、想逛的商場，還得參考地圖。最後行程的部份大部份是參考&lt;a href=&#34;http://www.backpackers.com.tw&#34;&gt;背包客&lt;/a&gt;網站和 PTT 的 Hong_Kong 板，地圖用 &lt;a href=&#34;http://maps.google.com.tw&#34;&gt;Google Map&lt;/a&gt;，餐廳的位置就靠&lt;a href=&#34;http://www.openprice.com&#34;&gt;開飯網&lt;/a&gt;，還有一堆網站用來查公車、門票、叮叮車、船班等等。用 Google Map 的好處是可以把每個要去的點都先標示出來再排行程可以比較有概念，至於大家都推薦的&lt;a href=&#34;http://www.centamap.com&#34;&gt;中原地圖&lt;/a&gt;感覺頗複雜，所以就沒有用了。最推薦的網站就是&lt;a href=&#34;http://hk.myblog.yahoo.com/catjacob2004&#34;&gt;Cat Jacob&amp;rsquo;s 香港吃喝玩樂情報站&lt;/a&gt;，即使沒有用到他上面提供的行程，但是靠上面的資料就可把很多點之間的交通方式給串出來了。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>